export async function generateGameRound(theme = "–æ–±—â–∞—è", playerCount = 4) {
  const prompt = `
–¢—ã AI-—Ö–æ—Å—Ç —Ç—Ä—ç—à-–∏–≥—Ä—ã. –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –¢–û–õ–¨–ö–û JSON. –ù–∏–∫–∞–∫–∏—Ö –ø–æ—è—Å–Ω–µ–Ω–∏–π, markdown –∏–ª–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –ü—Ä–∏–º–µ—Ä:

{
  "topic": "–ö—Ç–æ —Ç–æ–∫—Å–∏—á–Ω–µ–µ: –¥–∏–∑–∞–π–Ω–µ—Ä –∏–ª–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫?",
  "roles": ["–¢–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫ –Ω–∞ —É–¥–∞–ª—ë–Ω–∫–µ", "–î–∏–∑–∞–π–Ω–µ—Ä –∏–∑ Telegram", ...]
}

–¢–µ–º–∞: ${theme}
–†–æ–ª–µ–π: ${playerCount}
`;

  const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });
  const result = await model.generateContent(prompt);
  const text = result.response.text();

  // ‚úÖ –í—Å—Ç–∞–≤–∏–º –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥
  console.log("üü° PROMPT –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Gemini:\n", prompt);
  console.log("üü¢ –û–¢–í–ï–¢ –æ—Ç Gemini:\n", text);

  try {
    const match = text.match(/\{[\s\S]*?\}/);
    return JSON.parse(match[0]);
  } catch (err) {
    console.error("üî¥ –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ Gemini –æ—Ç–≤–µ—Ç–∞:", err);
    return {
      topic: "–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–º—ã",
      roles: Array(playerCount).fill("–ë–µ–∑—É–º–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫")
    };
  }
}
